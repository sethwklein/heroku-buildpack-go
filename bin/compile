#!/bin/bash
# usage: bin/compile <build-dir> <cache-dir>

set -eo pipefail

mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
ver=${GOVERSION:-1.1.2}
file=${GOFILE:-go$ver.$(uname|tr A-Z a-z)-amd64.tar.gz}
url=${GOURL:-http://go.googlecode.com/files/$file}

if test -f $build/.goinstall
then name=$(cat $build/.goinstall)
else
    echo >&2 " !     A .goinstall file is required. For instructions:"
    echo >&2 " !     https://github.com/sethwklein/heroku-buildpack-go"
    exit 1
fi

if test -e $build/bin && ! test -d $build/bin
then
    echo >&2 " !     File bin exists and is not a directory."
    exit 1
fi

if test -d $cache/go-$ver/go
then
    echo "-----> Using Go $ver"
else
    rm -rf $cache/* # be sure not to build up cruft
    mkdir -p $cache/go-$ver
    cd $cache/go-$ver
    echo -n "-----> Installing Go $ver..."
    curl -sSO $url
    tar zxf $file
    rm -f $file
    echo " done"
fi

GOROOT=$cache/go-$ver/go; export GOROOT
GOPATH=$build; export GOPATH
PATH=$GOROOT/bin:$PATH; export PATH

unset GIT_DIR # unset git dir or it will mess with goinstall
echo "-----> Running: go install -tags heroku $name"
go install -a -tags heroku $name

# optimize slug size
rm -rf $build/pkg

mkdir -p $build/.profile.d
echo 'export PATH=$PATH:$HOME/bin' > $build/.profile.d/go.sh
